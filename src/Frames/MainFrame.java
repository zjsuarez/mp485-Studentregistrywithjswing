package Frames;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import libraries.StudentManager;
import javax.swing.DefaultListModel;
import java.awt.event.*;
import javax.swing.JOptionPane;


public class MainFrame extends javax.swing.JFrame {

    

    
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        
        /*INICIAR COMPONENTES Y ACTUALIZAR ARRAY CON EL ARCHIVO */
        
       initComponents();
       loadStudents();
       
       
       
       
       /*  Listener para detectar que el usuario cierra la ventana y actualice el array al archivo registry.txt   */
       addWindowListener(new WindowAdapter() {
       
       
           public void windowClosing(WindowEvent e) {
               System.out.println("Saving file and exiting");
               
               try {
            StudentManager.updateFile();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
           
  
           }
           
       });
        
       


       
       
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Wide Latin", 3, 36)); // NOI18N
        jLabel1.setText("Student registry");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Lista");

        jButton1.setText("+");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("-");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("üîç");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.setText("DNI");
        jTextField1.setToolTipText("DNI");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jButton5.setText("Show student info");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jTextField1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton3)))
                                        .addGap(47, 47, 47)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton2)
                                        .addGap(29, 29, 29)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(125, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton5))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    /*ADD STUDENT BUTTON (OPENS ADDSTUDENT.JAVA DIALOG)*/
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
    AddStudent addstudentdialog = new AddStudent(this, true); /*CREATES ADDSTUDENT DIALOG*/
   
    /* WINDOWS LISTENER TO CHECK IF WINDOWS IS CLOSED, THEN UPDATE LIST. THIS IS TO ENSURE LIST IS UPDATE AFTER A NEW STUDENT IS ADDED*/
    addstudentdialog.addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosed(WindowEvent e) {
            loadStudents(); 
        }
    });
    
    addstudentdialog.setVisible(true); /*OPENS DIALOG*/
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    /*SEARCH BUTTON*/
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultListModel lista = new DefaultListModel(); /*CREATES NEW LIST*/
        
        int count = 0;
        for (int i = 0; i < StudentManager.getStudentArrayList().size(); i++) {
            if (StudentManager.getStudentArrayList().get(i).getId().contains(jTextField1.getText())) { /*RUNS THROUGH ARRAY FINDING DNI MATCHES (.getid().contains(j1.getText))*/
                lista.addElement(StudentManager.getStudentArrayList().get(i).getFirstName()+" " +StudentManager.getStudentArrayList().get(i).getLastName()); /*IF ELEMENT MATCHES, ITS ADDED TO LIST*/
                count++;
            }
        }
        
        
        jList1.setModel(lista); /*DISPLAYS NEW LIST*/
        System.out.println("USERS SEARCHED FOR USERS CONTAINING '" + jTextField1.getText() + "' as DNI. Found: " + count +" users");
    }//GEN-LAST:event_jButton3ActionPerformed

    
    
    /* DELETED USER BUTTON  */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete user?","YES_NO_OPTION", JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
        
        if (confirm==0) {
            try {
                StudentManager.removeStudent(jList1.getSelectedValue().toString());
            } catch (Exception e) {
                System.out.println("ERROR WHILE TRYING TO DELETE USER!");
            }    
        }
        
        
        loadStudents();
    }//GEN-LAST:event_jButton2ActionPerformed

    
    
    
    
    /*SHOW INFO STUDENT BUTTON*/
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            /*Go through array with a for to find the student selected on a list*/
        for (int i = 0; i < StudentManager.getStudentArrayList().size(); i++) {
            
            /*If student is found, shows their info: */
            if ((StudentManager.getStudentArrayList().get(i).getFirstName()+" "+StudentManager.getStudentArrayList().get(i).getLastName()).equals(jList1.getSelectedValue().toString())) {
                
                /*Saves info on a string with html format, since a normal label text is shortened as default and cannot display large text*/
                String info = "<html>   <style> p{font-size: 10px;} </style>   "
                            + "<p>Name: " + StudentManager.getStudentArrayList().get(i).getFirstName() +"</p></br>"
                            +       "<p>Last Name: " + StudentManager.getStudentArrayList().get(i).getLastName()+"</p></br>"
                            +       "<p>DNI: " + StudentManager.getStudentArrayList().get(i).getId()+"</p></br>"
                            +       "<p>Age: " + StudentManager.getStudentArrayList().get(i).getAge()+"</p></br>"
                            +       "<p>Course: "+ StudentManager.getStudentArrayList().get(i).getCourse()+"</p></br>"
                            +       "</html>";
                
                /*Inserts text to jLabel2*/
                jLabel2.setText(info);
                break;
            }
        }
        System.out.println("Showing info of student " + jList1.getSelectedValue().toString());
        } catch (Exception e) {
            
            System.out.println("ERROR WHILE TRYING TO SHOW INFORMATION OF STUDENT");
            
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    
    
    /*UPDATE LIST FROM ARRAY*/
    public void loadStudents(){
        int count = 0;
        DefaultListModel lista = new DefaultListModel(); /*Creates a defaultlistmodel to save the users from the arraylist*/
        for (int i = 0; i < StudentManager.getStudentArrayList().size(); i++) {
        lista.addElement(StudentManager.getStudentArrayList().get(i).getFirstName()+" " +StudentManager.getStudentArrayList().get(i).getLastName()); /*adds each student to the list*/
        count++;
        
      }
        
        /*Sets jList1 with the defaultlistmodel information, displaying all the users saved in the arraylist*/
        jList1.setModel(lista);
        
        System.out.println("");
        System.out.println("LIST UPDATED, FOUND " + count + " users");
        System.out.println("");
    }
 
    


    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
